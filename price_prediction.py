# -*- coding: utf-8 -*-
"""Price Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wyDyui_anM4okPkuGFbFTISkD56p5SSs
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from datetime import timedelta

from sklearn.preprocessing import MinMaxScaler
from sklearn.neural_network import MLPRegressor

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

from google.colab import files
uploaded = files.upload()
file_name = list(uploaded.keys())[0]
df = pd.read_csv(file_name, parse_dates=['Date'])
df.set_index('Date', inplace=True)

!pip install pmdarima

df = df.sort_index()

target_col = df.columns[0]
data = df[[target_col]]

data = data[pd.to_numeric(data[target_col], errors='coerce').notnull()]
data = data.astype(float)

data.plot(title="Original Price Data", figsize=(10,4))

scaler = MinMaxScaler()
scaled = scaler.fit_transform(data)

def create_rnn_sequences(data, seq_len):
    X, y = [], []
    for i in range(len(data) - seq_len):
        X.append(data[i:i+seq_len])
        y.append(data[i+seq_len])
    return np.array(X), np.array(y)

seq_len = 7
X_rnn, y_rnn = create_rnn_sequences(scaled, seq_len)

model_rnn = Sequential([
    LSTM(50, activation='relu', input_shape=(seq_len, 1)),
    Dense(1)
])
model_rnn.compile(optimizer='adam', loss='mse')
model_rnn.fit(X_rnn, y_rnn, epochs=30, batch_size=8, verbose=0)

last_seq = scaled[-seq_len:]
pred_rnn = []

for _ in range(31):
    pred = model_rnn.predict(last_seq.reshape(1, seq_len, 1), verbose=0)
    pred_rnn.append(pred[0, 0])
    last_seq = np.append(last_seq[1:], [[pred[0, 0]]], axis=0)

rnn_forecast = scaler.inverse_transform(np.array(pred_rnn).reshape(-1, 1))

X_bp = []
y_bp = []
window = 7
for i in range(len(data) - window):
    X_bp.append(data.values[i:i+window].flatten())
    y_bp.append(data.values[i+window][0])
X_bp, y_bp = np.array(X_bp), np.array(y_bp)

bp_model = MLPRegressor(hidden_layer_sizes=(64, 32), max_iter=1000)
bp_model.fit(X_bp, y_bp)

X_last_bp = data.values[-window:].flatten().reshape(1, -1)
bp_preds = []
for _ in range(31):
    pred = bp_model.predict(X_last_bp)[0]
    bp_preds.append(pred)
    X_last_bp = np.roll(X_last_bp, -1)
    X_last_bp[0, -1] = pred

start_date = pd.to_datetime('2025-05-01')
forecast_dates = pd.date_range(start=start_date, periods=31, freq='D')

combined = pd.DataFrame({
    'Date': forecast_dates,
    'RNN': rnn_forecast.flatten(),
    'BP': bp_preds
})
combined.set_index('Date', inplace=True)

print("\nðŸ“Š Price Predictions for May 2025:\n")
print(combined)

combined.to_csv("may2025_predictions.csv")
files.download("may2025_predictions.csv")

combined.plot(title='Predicted Prices for May 2025', figsize=(12, 6), marker='o')
plt.ylabel('Price')
plt.grid(True)
plt.show()